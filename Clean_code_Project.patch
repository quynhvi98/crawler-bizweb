Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/CustomerAddressDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/CustomerAddressDao.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/CustomerAddressDao.java	(revision )
@@ -35,7 +35,7 @@
             ps = con.startConnect().prepareCall(query);
             ps.setString(1, objectCustomerAddress.getId());
             rs = ps.executeQuery();
-            if (!(rs.next()) == false) {
+            if (rs.next()) {
                 query = "INSERT dbo.customer_address(customer_add_id, address_user ,name ,phone ,company ,zipe_code ,customer_id ,nation ,city ,district)VALUES  ( ?,? ,?  ,?  , ?  ,?  , ? , ?  , ? , ? )";
                 ps = con.startConnect().prepareCall(query);
                 ps.setString(1, objectCustomerAddress.getId());
@@ -52,8 +52,6 @@
             }
 
 
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -69,8 +67,6 @@
             while (rs.next()) {
                 ListCustomerAddiD.add(rs.getString(1));
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -99,8 +95,6 @@
                 ps.setString(10, objectCustomerAddress.getCustomerID());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -112,8 +106,6 @@
             ps = con.startConnect().prepareCall(query);
             ps.setString(1, ID);
             ps.executeUpdate();
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -129,8 +121,6 @@
             while (rs.next()) {
                 //listCustomerAddress.add(new CustomerAddress(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), customer_id, rs.getString(8), rs.getString(9), rs.getString(10)));
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/CustomerDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/CustomerDao.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/CustomerDao.java	(revision )
@@ -44,8 +44,6 @@
                 ps.setDouble(4, Double.parseDouble(total_bill));
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -57,10 +55,7 @@
             ps = con.startConnect().prepareCall(query);
             ps.setString(1, customerID);
             rs = ps.executeQuery();
-            if (rs.next()) return false;
-            return true;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
+            return !rs.next();
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -78,8 +73,6 @@
                 //Customer objectCustomers = new Customer(rs.getString(1), rs.getString(2), rs.getString(3), rs.getDouble(4));
                 //return objectCustomers;
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -88,7 +81,6 @@
     }
 
     public void updateDataCustomersFromObjectCustomer(Customer objectCustomers) {
-        Customer objectCustomers1=objectCustomers;
         try {
             query = "SELECT *FROM dbo.customer WHERE customer_id=?";
             ps = con.startConnect().prepareCall(query);
@@ -97,14 +89,12 @@
             if (rs.next()) {
                 query = "UPDATE dbo.customer SET full_name=?,email=?,total_bill=? WHERE customer_id=?";
                 ps = con.startConnect().prepareCall(query);
-                ps.setString(1,objectCustomers1.getFullName());
-                ps.setString(2,objectCustomers1.getEmail());
-                ps.setDouble(3,objectCustomers1.getTotalBill());
-                ps.setString(4,objectCustomers1.getId());
+                ps.setString(1, objectCustomers.getFullName());
+                ps.setString(2, objectCustomers.getEmail());
+                ps.setDouble(3, objectCustomers.getTotalBill());
+                ps.setString(4, objectCustomers.getId());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingCustomerData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingCustomerData.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingCustomerData.java	(revision )
@@ -20,7 +20,7 @@
  */
 public class GettingCustomerData {
     private static final Logger logger = Logger.getLogger(GettingCustomerData.class.getName());
-    private HtmlData authenticationGetRequest = new HtmlData();
+    private final HtmlData authenticationGetRequest = new HtmlData();
     private String cookie;
     private String html;
     private int page;
@@ -46,7 +46,7 @@
         Document getHTML = Jsoup.parse(html);
         dividePage.setDataCheckingFromWeb(getHTML);
         Elements getDataAllCustomer = dividePage.getDataCheckingFromWeb();
-        int allPages = Integer.parseInt(commonUtil.cutID(getDataAllCustomer.text()));
+        int allPages = Integer.parseInt(CommonUtil.cutID(getDataAllCustomer.text()));
         dividePage.setPage(allPages);
         allPages = dividePage.getPage();
         this.page = allPages;
@@ -63,21 +63,21 @@
         for (Element tags : getDataFromTRTags) {
             Customer customer = new Customer();
             Elements getDataFromAhrefTags = tags.select("td  a[href]");
-            customer.setId(commonUtil.cutID(getDataFromAhrefTags.get(0).attr("id")));
+            customer.setId(CommonUtil.cutID(getDataFromAhrefTags.get(0).attr("id")));
             customer.setFullName(getDataFromAhrefTags.get(0).text());
             customer.setEmail(getDataFromAhrefTags.get(2).text());
             Elements getDataFromTDTags = tags.select("td");
             Pattern pattern = Pattern.compile("[\\d]+.[\\d]+,[\\d]+");
             Matcher matcher = pattern.matcher(getDataFromTDTags.get(5).text());
-            String stringTotalBill = "";
+            StringBuilder stringTotalBill = new StringBuilder();
             while (matcher.find()) {
-                stringTotalBill += matcher.group();
+                stringTotalBill.append(matcher.group());
             }
-            stringTotalBill = stringTotalBill.replaceAll(",", "");
+            stringTotalBill = new StringBuilder(stringTotalBill.toString().replaceAll(",", ""));
             if (stringTotalBill.length() <= 0) {
-                stringTotalBill = "0";
+                stringTotalBill = new StringBuilder("0");
             }
-            customer.setTotalBill(Double.parseDouble(stringTotalBill));
+            customer.setTotalBill(Double.parseDouble(stringTotalBill.toString()));
             authenticationGetRequest.connectURLAndTakeHTML(RequestHeader.urlWebsite+"/customers/" + customer.getId(), cookie);
             getHTML = Jsoup.parse(authenticationGetRequest.getHtmlData());
             if (getHTML.title().equals("Đăng nhập quản trị hệ thống")) {
@@ -97,9 +97,9 @@
         String[] cutScriptTakeHtml = getTagsAddress.toString().split("type=\"text/html\">");
         Pattern pattern = Pattern.compile("[\\d]+");
         Matcher matcher = pattern.matcher(cutScriptTakeHtml[0]);
-        String customerAddID = "";
+        StringBuilder customerAddID = new StringBuilder();
         while (matcher.find()) {
-            customerAddID += matcher.group();
+            customerAddID.append(matcher.group());
         }
         cutScriptTakeHtml = cutScriptTakeHtml[1].split("</script>");
         getHTML = Jsoup.parse(cutScriptTakeHtml[0]);
@@ -107,8 +107,8 @@
         ArrayList<String> listCustomerAddress = new ArrayList<String>();
         for (Element gettag : getDataInGetDataFromTRTags) {
             Elements getDataInGetDataFromTRTagsInput = gettag.select("input[value]");
-            for (int i = 0; i < getDataInGetDataFromTRTagsInput.size(); i++) {
-                String dataAddress=getDataInGetDataFromTRTagsInput.get(i).attr("value");
+            for (Element aGetDataInGetDataFromTRTagsInput : getDataInGetDataFromTRTagsInput) {
+                String dataAddress = aGetDataInGetDataFromTRTagsInput.attr("value");
                 if (!dataAddress.equals("true") || dataAddress.equals("false")) {
                     if (dataAddress.equals("")) {
                         listCustomerAddress.add("null");
@@ -123,7 +123,7 @@
             }
         }
         listCustomerAddress.add("");
-        CustomerAddress customerAddress = new CustomerAddress(customerAddID, listCustomerAddress.get(4), listCustomerAddress.get(0) + "," + listCustomerAddress.get(1), listCustomerAddress.get(3), listCustomerAddress.get(2), listCustomerAddress.get(5), customer.getId(), listCustomerAddress.get(6), listCustomerAddress.get(7), listCustomerAddress.get(8));
+        CustomerAddress customerAddress = new CustomerAddress(customerAddID.toString(), listCustomerAddress.get(4), listCustomerAddress.get(0) + "," + listCustomerAddress.get(1), listCustomerAddress.get(3), listCustomerAddress.get(2), listCustomerAddress.get(5), customer.getId(), listCustomerAddress.get(6), listCustomerAddress.get(7), listCustomerAddress.get(8));
         saveAndUpdateCustomerData(customer, customerAddress);
     }
     private void saveAndUpdateCustomerData(Customer customer, CustomerAddress customerAddress) {
@@ -153,8 +153,8 @@
             } else {
                 queryDataBase.setDataCustomerAddress(customerAddress);
             }
-            for (int i = 0; i < listCustomerDddIdFormCustomerId.size(); i++) {
-                queryDataBase.deleteDataCustomerAddress(listCustomerDddIdFormCustomerId.get(i));
+            for (String aListCustomerDddIdFormCustomerId : listCustomerDddIdFormCustomerId) {
+                queryDataBase.deleteDataCustomerAddress(aListCustomerDddIdFormCustomerId);
             }
         }
     }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingOrderData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingOrderData.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingOrderData.java	(revision )
@@ -13,10 +13,8 @@
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
-import java.io.IOException;
 import java.text.ParseException;
 import java.util.ArrayList;
-import java.util.Iterator;
 import java.util.Properties;
 import java.util.Set;
 import java.util.concurrent.TimeUnit;
@@ -28,10 +26,10 @@
  */
 public class GettingOrderData {
     private static final Logger logger = Logger.getLogger(GettingOrderData.class.getName());
-    private HtmlData authenticationGetRequest = new HtmlData();
+    private final HtmlData authenticationGetRequest = new HtmlData();
     private Order order;
     private OrderAddress objectOrderAddress;
-    private QueryDataBase queryDataBase = new QueryDataBase();
+    private final QueryDataBase queryDataBase = new QueryDataBase();
     private Set states;
     private OrderProduct orderProduct;
     private Document getHTML;
@@ -40,7 +38,7 @@
     private String html;
     private int pages;
 
-    public boolean getDataOrderFromWebSetToDataBase(String html, String cookie) throws IOException {
+    public boolean getDataOrderFromWebSetToDataBase(String html, String cookie) {
         this.cookie = cookie;
         this.html = html;
         startScheduling();
@@ -163,13 +161,13 @@
             getDataFromTRTags = getHTML.select("div[class*=panel panel-default panel-full] div");
             String emailDonHang = getDataFromTRTags.get(5).text();
             getDataFromTRTags = getHTML.select("script.modal_source#modal-edit-shipping-address[define*={editShippingAddressModal]");
-            getShippingAddress(emailDonHang, getDataFromTRTags, getDataFromAhrefTags, fullDataFromTagsAddress, namePayOrder);
+            getShippingAddress(emailDonHang, getDataFromTRTags, fullDataFromTagsAddress, namePayOrder);
             saveAndUpdateOrderData();
             TimeUnit.SECONDS.sleep(5);
         }
     }
 
-    private void getShippingAddress(String emailDonHang, Elements getDataFromTRTags, Elements getDataFromAhrefTags, String[] fullDataFromTagsAddress, String namePayOrder) {
+    private void getShippingAddress(String emailDonHang, Elements getDataFromTRTags, String[] fullDataFromTagsAddress, String namePayOrder) {
         DividePage dividePage = new DividePage();
         for (Element getTags : getDataFromTRTags
                 ) {
@@ -177,7 +175,7 @@
             String[] cutscript = getTags.toString().split("type=\"text/html\">");
             cutscript = cutscript[1].split("</script>");
             getHTML = Jsoup.parse(cutscript[0]);
-            getDataFromAhrefTags = getHTML.select("div.modal-body div.row");
+            Elements  getDataFromAhrefTags = getHTML.select("div.modal-body div.row");
             Elements getIdCa = getDataFromAhrefTags.select("input[value]");
             listSaveShippingAddress.add(getIdCa.get(0).attr("value"));
             listSaveShippingAddress.add(getIdCa.get(1).attr("value"));
@@ -185,21 +183,20 @@
             listSaveShippingAddress.add(getIdCa.get(3).attr("value"));
             Elements getDataInGetDataFromTRTagsInputSLe = getDataFromAhrefTags.select("option[selected*=selected]");
             listSaveShippingAddress = dividePage.getDataFromTRTagsInputSLe(getDataInGetDataFromTRTagsInputSLe, listSaveShippingAddress);
-            String billingAddress = "";
+            StringBuilder billingAddress = new StringBuilder();
             for (int i = 0; i < 6; i++) {
-                if (!billingAddress.equalsIgnoreCase("Giống địa chỉ giao hàng;")) {
-                    billingAddress += fullDataFromTagsAddress[i] + ";";
+                if (!billingAddress.toString().equalsIgnoreCase("Giống địa chỉ giao hàng;")) {
+                    billingAddress.append(fullDataFromTagsAddress[i]).append(";");
                 } else {
-                    billingAddress = "";
+                    billingAddress = new StringBuilder();
                     i = 5;
                 }
             }
             order.setPaymentID(queryDataBase.getIDPaymentFromContent(namePayOrder));
-            objectOrderAddress = new OrderAddress(emailDonHang, listSaveShippingAddress.get(0), listSaveShippingAddress.get(1), listSaveShippingAddress.get(2), listSaveShippingAddress.get(3), listSaveShippingAddress.get(4), listSaveShippingAddress.get(5), listSaveShippingAddress.get(6), billingAddress, order.getOrderID());
+            objectOrderAddress = new OrderAddress(emailDonHang, listSaveShippingAddress.get(0), listSaveShippingAddress.get(1), listSaveShippingAddress.get(2), listSaveShippingAddress.get(3), listSaveShippingAddress.get(4), listSaveShippingAddress.get(5), listSaveShippingAddress.get(6), billingAddress.toString(), order.getOrderID());
             states = ListProductOfOrder.keySet();
-            Iterator itr = states.iterator();
-            while (itr.hasNext()) {
-                String idProduct = (String) itr.next();
+            for (Object state : states) {
+                String idProduct = (String) state;
                 orderProduct = new OrderProduct(Double.parseDouble(ListProductOfOrder.getProperty(idProduct)), idProduct, order.getOrderID());
             }
         }
@@ -222,7 +219,7 @@
             ArrayList<OrderProduct> listOrderProduct = queryDataBase.getListDataOrderProduct(order.getOrderID());
             if (listOrderProduct.indexOf(orderProduct) < 0) {
                 boolean checkquery = queryDataBase.updateDataFromOrderAndProduct(orderProduct);
-                if (checkquery == false) {
+                if (!checkquery) {
                     queryDataBase.setDataFromOrderAndProduct(orderProduct);
                 }
             }
@@ -231,9 +228,7 @@
             } else {
                 queryDataBase.updateDataFromOrderAddress(objectOrderAddress);
             }
-            if (index < 0) {
-                queryDataBase.setDataFromOrderAddress(objectOrderAddress);
-            }
+
         }
     }
 }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/common/CommonUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/common/CommonUtil.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/common/CommonUtil.java	(revision )
@@ -4,9 +4,6 @@
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
-import java.util.Locale;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
 
 /**
  * Created by viquynh on 26/07/2017.
@@ -43,27 +40,27 @@
     }
 
     public static String cutNumberToCharStop(String get) {
-        String strResult = "";
+        StringBuilder strResult = new StringBuilder();
         for (int i = 0; i < get.length(); i++) {
             if (Character.isDigit(get.charAt(i))) {
-                strResult += get.charAt(i);
+                strResult.append(get.charAt(i));
             } else {
                 if (strResult.length() > 1) {
                     break;
                 }
             }
         }
-        return strResult;
+        return strResult.toString();
     }
 
     public static String takeMoneyInString(String strMoney) {
-        String strResult = "";
+        StringBuilder strResult = new StringBuilder();
         for (int i = 0; i < strMoney.length(); i++) {
             if (Character.isDigit(strMoney.charAt(i))) {
-                strResult += strMoney.charAt(i);
+                strResult.append(strMoney.charAt(i));
             }
         }
-        return strResult;
+        return strResult.toString();
     }
 
     public static String fomatDateSQL(String date) throws ParseException {
Index: web/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/WEB-INF/web.xml	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ web/WEB-INF/web.xml	(revision )
@@ -5,7 +5,7 @@
          version="3.1">
     <context-param>
         <param-name>contextConfigLocation</param-name>
-        <param-value>/WEB-INF/applicationContext.xml</param-value>
+        <param-value>/web/WEB-INF/applicationContext.xml</param-value>
     </context-param>
     <listener>
         <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/PaymenDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/PaymenDao.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/PaymenDao.java	(revision )
@@ -38,8 +38,6 @@
                 ps.setString(1, content);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -54,8 +52,6 @@
             if (rs.next()) {
                 return rs.getInt(1);
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductCategoryDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductCategoryDao.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductCategoryDao.java	(revision )
@@ -41,8 +41,6 @@
                 ps.setString(2, name);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -57,8 +55,6 @@
             if (rs.next()) {
                 return rs.getInt(1);
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -68,7 +64,7 @@
     public boolean hasCategoryProduct(String productCate_ID, String product_ID) {
         query = "SELECT *FROM dbo.pategory_croduct WHERE product_cate_id =? AND product_id =?";
         try {
-            String ID = (String) template.queryForObject(
+            String ID = template.queryForObject(
                     query, new Object[]{productCate_ID, product_ID}, String.class);
             return true;
         } catch (EmptyResultDataAccessException e) {
@@ -87,8 +83,6 @@
             ps.setString(1, productCate_ID);
             ps.setString(2, product_ID);
             ps.executeUpdate();
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -105,8 +99,6 @@
                 listProductCateID.add(rs.getString(1));
             }
             return listProductCateID;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/OrderDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/OrderDao.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/OrderDao.java	(revision )
@@ -49,8 +49,6 @@
 
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -71,8 +69,6 @@
                 ps.setString(3, dataFromOrderAndProduct.getOrderID());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -99,8 +95,6 @@
                 ps.setString(10, dataFromOrderAddress.getOrderID());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/authentication/HtmlData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/authentication/HtmlData.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/authentication/HtmlData.java	(revision )
@@ -5,7 +5,6 @@
 import org.apache.http.client.methods.HttpGet;
 import org.apache.http.impl.client.HttpClientBuilder;
 import java.io.BufferedReader;
-import java.io.IOException;
 import java.io.InputStreamReader;
 import java.net.UnknownHostException;
 
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/QueryDataBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/QueryDataBase.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/QueryDataBase.java	(revision )
@@ -11,7 +11,6 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
-import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.logging.Level;
 import java.util.logging.Logger;
@@ -23,7 +22,7 @@
     private String queryy;
     private PreparedStatement pss;
     private ResultSet rss;
-    private ConnectDB conn = new ConnectDB();
+    private final ConnectDB conn = new ConnectDB();
     private static final Logger logger = Logger.getLogger(QueryDataBase.class.getName());
 
     public void setDataProductCategory(String productCate_ID, String name) {
@@ -39,8 +38,6 @@
                 ps.setString(2, name);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -57,8 +54,6 @@
             }
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
-        } catch (ClassNotFoundException e) {
-            e.printStackTrace();
         }
         return 0;
     }
@@ -75,8 +70,6 @@
                 ps.setString(1, name);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -92,8 +85,6 @@
             if (rss.next()) {
                 return rss.getInt(1);
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -112,8 +103,6 @@
                 ps.setString(1, Name);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -129,8 +118,6 @@
             if (rss.next()) {
                 return rss.getInt(1);
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -158,8 +145,6 @@
                 ps.setInt(10, product.getProducerId());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -171,10 +156,7 @@
             pss = conn.startConnect().prepareCall(queryy);
             pss.setString(1, product_ID);
             rss = pss.executeQuery();
-            if (rss.next()) return false;
-            return true;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
+            return !rss.next();
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -195,9 +177,6 @@
                 ps.setString(2, product_ID);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            e.getStackTrace();
-            // logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             e.getStackTrace();
             // logger.log(Level.SEVERE, e.getMessage());
@@ -216,8 +195,6 @@
                 dataProducerFromProductID.add(new Product(rss.getString(1), rss.getString(2), rss.getDouble(3), rss.getInt(4), rss.getDouble(5), rss.getString(6), rss.getString(7), rss.getString(8), rss.getInt(9), rss.getInt(10)));
                 return dataProducerFromProductID;
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -267,8 +244,6 @@
                 listProductCateID.add(rss.getString(1));
             }
             return listProductCateID;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -287,8 +262,6 @@
                 ps.setString(1, content);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -316,8 +289,6 @@
 
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -332,8 +303,6 @@
             if (rss.next()) {
                 return rss.getInt(1);
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -355,8 +324,6 @@
                 ps.setString(3, dataFromOrderAndProduct.getOrderID());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -383,8 +350,6 @@
                 ps.setString(10, dataFromOrderAddress.getOrderID());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -405,8 +370,6 @@
                 ps.setDouble(4, customer.getTotalBill());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -418,10 +381,7 @@
             pss = conn.startConnect().prepareCall(queryy);
             pss.setString(1, customerID);
             rss = pss.executeQuery();
-            if (rss.next()) return false;
-            return true;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
+            return !rss.next();
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -434,7 +394,7 @@
             pss = conn.startConnect().prepareCall(queryy);
             pss.setString(1, objectCustomerAddress.getId());
             rss = pss.executeQuery();
-            if (rss.next() == false) {
+            if (!rss.next()) {
                 query = "INSERT dbo.customer_address(customer_add_id, address_user ,name ,phone ,company ,zipe_code ,customer_id ,nation ,city ,district)VALUES  ( ?,? ,?  ,?  , ?  ,?  , ? , ?  , ? , ? )";
                 ps = con.prepareCall(query);
                 ps.setString(1, objectCustomerAddress.getId());
@@ -449,9 +409,6 @@
                 ps.setString(10, objectCustomerAddress.getDistrict());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            e.printStackTrace();
-
         } catch (SQLException e) {
             e.printStackTrace();
             logger.log(Level.SEVERE, e.getMessage());
@@ -469,8 +426,6 @@
             while (rss.next()) {
                 ListCustomerAddiD.add(rss.getString(1));
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -502,8 +457,6 @@
             }
 
 
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -529,8 +482,6 @@
             rss = pss.executeQuery();
             while (rss.next()) {
                 customerAddressArrayList.add(new CustomerAddress(rss.getString(1), rss.getString(2), rss.getString(3), rss.getString(4), rss.getString(5), rss.getString(6), customer_ID, rss.getString(8), rss.getString(9), rss.getString(10)));            }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -538,18 +489,14 @@
     }
 
     public Customer getDataCustomersFromCustomerID(String customer_ID) {
-
         try {
             queryy = "SELECT *FROM dbo.customer WHERE customer_id=?";
             pss = conn.startConnect().prepareCall(queryy);
             pss.setString(1, customer_ID);
             rss = pss.executeQuery();
-            while (rss.next()) {
-                Customer objectCustomers = new Customer(rss.getString(1), rss.getString(2), rss.getString(3), rss.getDouble(4));
-                return objectCustomers;
+            if (rss.next()) {
+                return new Customer(rss.getString(1), rss.getString(2), rss.getString(3), rss.getDouble(4));
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -558,7 +505,6 @@
     }
 
     public void updateDataCustomersFromObjectCustomer(Customer objectCustomers) {
-        Customer objectCustomers1 = objectCustomers;
         try {
             queryy = "SELECT *FROM dbo.customer WHERE customer_id=?";
             pss = conn.startConnect().prepareCall(queryy);
@@ -567,14 +513,12 @@
             if (rss.next()) {
                 query = "UPDATE dbo.Customer SET full_name=?,email=?,total_bill=? WHERE customer_id=?";
                 ps = con.prepareCall(query);
-                ps.setString(1, objectCustomers1.getFullName());
-                ps.setString(2, objectCustomers1.getEmail());
-                ps.setDouble(3, objectCustomers1.getTotalBill());
-                ps.setString(4, objectCustomers1.getId());
+                ps.setString(1, objectCustomers.getFullName());
+                ps.setString(2, objectCustomers.getEmail());
+                ps.setDouble(3, objectCustomers.getTotalBill());
+                ps.setString(4, objectCustomers.getId());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -588,11 +532,9 @@
             pss = conn.startConnect().prepareCall(queryy);
             rss = pss.executeQuery();
             while (rss.next()) {
-                listOrder.add(new Order(rss.getString(1), commonUtil.cutDateSQL(rss.getString(2)), rss.getString(3), rss.getString(4), rss.getDouble(5), rss.getDouble(6), rss.getDouble(7), rss.getString(8), rss.getInt(9)));
+                listOrder.add(new Order(rss.getString(1), CommonUtil.cutDateSQL(rss.getString(2)), rss.getString(3), rss.getString(4), rss.getDouble(5), rss.getDouble(6), rss.getDouble(7), rss.getString(8), rss.getInt(9)));
             }
             return listOrder;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -620,8 +562,6 @@
                 ps.setString(10, dataFromOrder.getCustomerID());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -632,10 +572,7 @@
             pss = conn.startConnect().prepareCall(queryy);
             pss.setString(1, orderID);
             rss = pss.executeQuery();
-            if (rss.next()) return false;
-            return true;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
+            return !rss.next();
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -653,8 +590,6 @@
                 listOrderProduct.add(new OrderProduct(rss.getDouble(1), rss.getString(2), rss.getString(3)));
             }
             return listOrderProduct;
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -680,8 +615,6 @@
             } else {
                 return false;
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -709,8 +642,6 @@
                 ps.setString(10, dataFromOrderAddress.getOrderID());
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -728,8 +659,6 @@
             return listOrderAddress;
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
-        } catch (ClassNotFoundException e) {
-            e.printStackTrace();
         }
 
         return listOrderAddress;
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductGroupDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductGroupDao.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductGroupDao.java	(revision )
@@ -38,8 +38,6 @@
                 ps.setString(1, name);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -55,8 +53,6 @@
             if (rs.next()) {
                 return rs.getInt(1);
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/authentication/CheckingAuthentication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/authentication/CheckingAuthentication.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/authentication/CheckingAuthentication.java	(revision )
@@ -9,7 +9,6 @@
 import org.apache.http.client.methods.HttpPost;
 import org.apache.http.impl.client.HttpClientBuilder;
 
-import java.io.IOException;
 import java.net.UnknownHostException;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
@@ -26,7 +25,7 @@
     private String query;
     private PreparedStatement ps;
     private ResultSet rs;
-    private ConnectDB con = new ConnectDB();
+    private final ConnectDB con = new ConnectDB();
     private String email;
     private String password;
     private static final String url = RequestHeader.urlWebsite+"/authorization/login?Email=%s&Password=%s";
@@ -36,7 +35,7 @@
     final String gmailCompany ="higgsupcompany@gmail.com";
     final String subjectEmail ="Thông báo vấn đề tài khoản";
 
-    public void doRequestTakeCookie() throws IOException {
+    public void doRequestTakeCookie() {
         try {
             HttpClient client = HttpClientBuilder.create().build();
             HttpPost post = new HttpPost(String.format(url, email,password));
@@ -62,7 +61,7 @@
     }
 
     public String getCookie() {
-        return this.cookie;
+        return cookie;
     }
 
     public CheckingAuthentication() {
@@ -79,8 +78,6 @@
                 email = rs.getString(1);
                 password = rs.getString(2);
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
Index: src/main/java/com/higgsup/bizwebcrawler/BizwebCrawler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/BizwebCrawler.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/BizwebCrawler.java	(revision )
@@ -1,14 +1,6 @@
 package com.higgsup.bizwebcrawler;
 
-/**
- * Created by viquynh.
- */
-
-import com.higgsup.bizwebcrawler.controller.common.FileTemplate;
 import com.higgsup.bizwebcrawler.controller.scheduling.StartScheduling;
-import com.higgsup.bizwebcrawler.model.product.Producer;
-import com.higgsup.bizwebcrawler.model.product.Product;
-import com.higgsup.bizwebcrawler.model.product.ProductGroup;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.support.ClassPathXmlApplicationContext;
 
Index: src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/StartScheduling.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/StartScheduling.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/StartScheduling.java	(revision )
@@ -3,11 +3,9 @@
 import com.higgsup.bizwebcrawler.controller.authentication.CheckingAuthentication;
 import com.higgsup.bizwebcrawler.controller.managedatabase.ConnectDB;
 
-import java.io.IOException;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.TimeUnit;
-import java.util.logging.Level;
 import java.util.logging.Logger;
 
 /*
@@ -68,10 +66,6 @@
             if (s.equals("Not Connect Internet")) {
                 System.out.println("mất mạng");
             }
-        } catch (ClassNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
         }
     }
 }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingProductData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingProductData.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/crawlerdatafrombizweb/getandupdatedata/GettingProductData.java	(revision )
@@ -31,7 +31,7 @@
     private Product product = new Product();
     private ProductGroup productGroup = new ProductGroup();
     private Producer producer = new Producer();
-    public boolean getDataProductFromWeb(String htmlData, String cookie) throws IOException {
+    public boolean getDataProductFromWeb(String htmlData, String cookie) {
         this.cookie = cookie;
         this.htmlData = htmlData;
         startGettingProductData();
@@ -90,7 +90,7 @@
         }
     }
 
-    private void getContentProduct(Elements getDataFromTrTags,HashMap getDataCategoryProduct) throws IOException {
+    private void getContentProduct(Elements getDataFromTrTags,HashMap getDataCategoryProduct) {
         String titleURL;
         authenticationGetRequest.connectURLAndTakeHTML(RequestHeader.urlWebsite + "/products/" + product.getProductId(), cookie);
         getHTML = Jsoup.parse(authenticationGetRequest.getHtmlData());
@@ -110,23 +110,20 @@
                 throw new Error("Error cookie");
             }
             getDataFromDivRowTag = getHTML.select("div.row");
-            if (getDataFromDivRowTag.size() < 0) {
-                throw new Error("False " + product.getProductId());
-            }
         }
         if (getDataFromTrTags.size() > 0) {
             product.setContent(getDataFromTrTags.get(0).text());
         }
         getDataFromTrTags = getDataFromDivRowTag.get(2).select("a[href]");
         for (int j = 1; j < getDataFromTrTags.size(); j++) {
-            if (getDataFromTrTags.get(j).text().toString().length() > 0) {
+            if (getDataFromTrTags.get(j).text().length() > 0) {
                 getDataCategoryProduct.put(CommonUtil.cutID(getDataFromTrTags.get(j).attr("href")), getDataFromTrTags.get(j).text());
             }
         }
         Elements checkVersionProduct = getHTML.select("div.row a[bind-event-click*=changeOptionNamesModal.show(]");
         saveAndUpdateProductData(checkVersionProduct, getDataFromDivRowTag, getDataCategoryProduct);
     }
-    public void saveAndUpdateProductData( Elements checkVersionProduct, Elements getDataFromDivRowTag, HashMap getDataCategoryProduct) {
+    private void saveAndUpdateProductData(Elements checkVersionProduct, Elements getDataFromDivRowTag, HashMap getDataCategoryProduct) {
         try {
             QueryDataBase queryDataBase = new QueryDataBase();
             product.setDescription("");
@@ -165,11 +162,10 @@
         ArrayList<String> listProductCateID = null;
         listProductCateID = queryDataBase.getListProductCateIdFormProductIdInCategoryProduct(product.getProductId());
         Set set = getDataCategoryProduct.entrySet();
-        Iterator i = set.iterator();
-        while (i.hasNext()) {
-            Map.Entry mapEntry = (Map.Entry) i.next();
+        for (Object aSet : set) {
+            Map.Entry mapEntry = (Map.Entry) aSet;
             queryDataBase.setDataProductCategory((String) mapEntry.getKey(), (String) mapEntry.getValue());
-            int indexList = listProductCateID.indexOf((String) mapEntry.getKey());
+            int indexList = listProductCateID.indexOf(mapEntry.getKey());
             if (indexList >= 0) {
                 listProductCateID.remove(indexList);
             } else {
@@ -196,9 +192,8 @@
             }
             queryDataBase.setDataProduct(product);
             Set set = getDataCategoryProduct.entrySet();
-            Iterator i = set.iterator();
-            while (i.hasNext()) {
-                Map.Entry mapEntry = (Map.Entry) i.next();
+            for (Object aSet : set) {
+                Map.Entry mapEntry = (Map.Entry) aSet;
                 queryDataBase.setDataProductCategory((String) mapEntry.getKey(), (String) mapEntry.getValue());
                 queryDataBase.setDataFromCategoryProductAndProduct((String) mapEntry.getKey(), product.getProductId());
             }
Index: src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingCustomerInformation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingCustomerInformation.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingCustomerInformation.java	(revision )
@@ -3,7 +3,6 @@
 import com.higgsup.bizwebcrawler.controller.crawlerdatafrombizweb.getandupdatedata.GettingCustomerData;
 import com.higgsup.bizwebcrawler.controller.authentication.HtmlData;
 
-import java.io.IOException;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -22,12 +21,8 @@
         } catch (Error e) {
             String s = e.getLocalizedMessage();
             if (s.equals("Error cookie")) {
-                try {
-                    System.out.println("lỗi cookie");
-                    doRequestTakeCookie();
-                } catch (IOException e1) {
-                    e1.printStackTrace();
-                }
+                System.out.println("lỗi cookie");
+                doRequestTakeCookie();
             }
         } catch (Exception e) {
             logger.log(Level.SEVERE, e.getMessage());
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ConnectDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ConnectDB.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ConnectDB.java	(revision )
@@ -20,7 +20,7 @@
     private static final String DB_USER = "Username=sa;";
     private static final String DB_PASSWORD = "Password =123456;";
 
-    public Connection startConnect() throws ClassNotFoundException {
+    public Connection startConnect() {
         try {
             Class.forName(DB_DRIVER);
             con = DriverManager.getConnection(DB_SERVER + DB_NAME + DB_USER + DB_PASSWORD);
Index: src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductDao.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/managedatabase/ProductDao.java	(revision )
@@ -1,19 +1,16 @@
 package com.higgsup.bizwebcrawler.controller.managedatabase;
 
-/**
- * Created by viquynh
+/*
+  Created by viquynh
  */
-import com.higgsup.bizwebcrawler.model.product.Product;
 import org.springframework.dao.EmptyResultDataAccessException;
 import org.springframework.jdbc.core.JdbcTemplate;
-import org.springframework.jdbc.core.RowMapper;
 import org.springframework.stereotype.Repository;
 
 import javax.sql.DataSource;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
-import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -44,8 +41,6 @@
                 ps.setString(1, name);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -70,8 +65,6 @@
                 ps.setInt(8, producer_ID);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             logger.log(Level.SEVERE, e.getMessage());
         }
@@ -80,7 +73,7 @@
     public boolean hasProductID(String product_ID) {
         query = "SELECT product_id FROM dbo.product WHERE product_id=?";
         try {
-            String ID = (String) template.queryForObject(
+            String ID = template.queryForObject(
                     query, new Object[]{product_ID}, String.class);
             return true;
         } catch (EmptyResultDataAccessException e) {
@@ -105,9 +98,6 @@
                 ps.setString(2, product_ID);
                 ps.executeUpdate();
             }
-        } catch (ClassNotFoundException e) {
-
-            logger.log(Level.SEVERE, e.getMessage());
         } catch (SQLException e) {
             e.getStackTrace();
             logger.log(Level.SEVERE, e.getMessage());
@@ -118,7 +108,7 @@
         Integer ID = null;
         query = "SELECT producer_id FROM producer WHERE name=?";
         try {
-            ID = (Integer) template.queryForObject(query, new Object[]{name}, Integer.class);
+            ID = template.queryForObject(query, new Object[]{name}, Integer.class);
             System.out.println(ID);
         } catch (EmptyResultDataAccessException e) {
             logger.log(Level.SEVERE, e.getMessage());
Index: src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingOrderInformation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingOrderInformation.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingOrderInformation.java	(revision )
@@ -4,7 +4,6 @@
 import com.higgsup.bizwebcrawler.controller.authentication.RequestHeader;
 import com.higgsup.bizwebcrawler.controller.crawlerdatafrombizweb.getandupdatedata.GettingOrderData;
 
-import java.io.IOException;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -23,12 +22,8 @@
         } catch (Error e) {
             String s = e.getLocalizedMessage();
             if (s.equals("Error cookie")) {
-                try {
-                    System.out.println("lỗi cookie");
-                    doRequestTakeCookie();
-                } catch (IOException e1) {
-                    e1.printStackTrace();
-                }
+                System.out.println("lỗi cookie");
+                doRequestTakeCookie();
             }
         } catch (Exception e) {
             logger.log(Level.SEVERE, e.getMessage());
Index: src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingProductInformation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingProductInformation.java	(revision d84452417547feedac8e2a9b67fe296f8e28ac66)
+++ src/main/java/com/higgsup/bizwebcrawler/controller/scheduling/QueryingProductInformation.java	(revision )
@@ -4,7 +4,6 @@
 import com.higgsup.bizwebcrawler.controller.authentication.RequestHeader;
 import com.higgsup.bizwebcrawler.controller.crawlerdatafrombizweb.getandupdatedata.GettingProductData;
 
-import java.io.IOException;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -31,12 +30,8 @@
         } catch (Error e) {
             String s = e.getLocalizedMessage();
             if (s.equals("Error cookie")) {
-                try {
-                    System.out.println("lỗi cookie");
-                    doRequestTakeCookie();
-                } catch (IOException e1) {
-                    e1.printStackTrace();
-                }
+                System.out.println("lỗi cookie");
+                doRequestTakeCookie();
             }
         } catch (Exception e) {
             logger.log(Level.SEVERE, e.getMessage());
